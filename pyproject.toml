[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "clarinet"
version = "0.0a.0"
description = "Clarinet - A Framework for Medical Image Analysis and Annotation"
readme = "README.md"
authors = [
    {name = "Denis Nesterov"}
]
requires-python = ">=3.12"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Development Status :: 3 - Alpha"
]
dependencies = [
    "fastapi>=0.95.0",
    "uvicorn>=0.21.1",
    "sqlmodel>=0.0.8",
    "pydicom>=2.3.1",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "alembic>=1.11.0",
    "jinja2>=3.1.2",
    "requests>=2.28.0",
    "python-multipart>=0.0.6",
    "python-jose>=3.3.0",
    "bcrypt>=4.0.1",
    "loguru>=0.7.0",
    "faststream>=0.3.0",
    "authlib>=1.2.0",
    "jinja-markdown>=1.0.0",
    "pytest-asyncio>=1.1.0",
    "aiosqlite>=0.21.0",
    "httpx>=0.28.1",
    "aiofiles>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.15.0",
    "ruff",
    "schemathesis>=3.19.0",
    "pytest-cov>=4.1.0",
    "types-jsonschema>=4.23.0.20241208",
    "types-aiofiles"
]
image = [
    "numpy>=1.24.3",
    "nibabel>=5.0.0",
    "scikit-image>=0.20.0",
    "pynrrd>=1.0.0"
]
dicom = [
    "pynetdicom>=2.0.2",
    "dicom-anonymizer>=1.0.0"
]
rabbitmq = [
    "faststream[rabbit]>=0.3.0"
]
docs = [
    "sphinx>=6.1.3",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0"
]

[project.scripts]
clarinet = "src.cli.main:main"

[project.urls]
Repository = "https://github.com/radionest/clarinet"
Issues = "https://github.com/radionest/clarinet/issues"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.15.0",
    "ruff",
    "schemathesis>=3.19.0",
    "pytest-cov>=4.1.0",
    "types-jsonschema>=4.23.0.20241208",
    "types-aiofiles>=24.1.0.20250822",
]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
exclude = "tests"
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = [
    "pydicom.*",
    "nibabel.*",
    "nrrd.*",
    "skimage.*",
    "pynetdicom.*",
    "dicom_anonymizer.*",
    "faststream.*",
    "authlib.*",
    "jinja_markdown.*",
    "schemathesis.*",
    "pydantic_settings.*",
    "alembic.*",
]
ignore_missing_imports = true


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
