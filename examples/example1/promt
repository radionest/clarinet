Я пишу на питоне библиотеку для создания пайплайнов для анализа изображений. Стэк: rabbitmq, faststream. Пайплайн должен иметь свой DSL . 
Вот пример того как должен работать этот DSL:
from clarinet.pipeline import node, event, make_pipeline, finished
from clarinet.pipeline.commons import give_task

@node
def anonimize_dicom(msg)->None:
    pass

@node
def get_birads_from_protocol(msg)->None:
    pass

@node 
def get_acr_from_procol(msg)->None:
    pass

@node
def compare_ai_with_doctor(msg)->Bool:
    return get_doc_result(msg.series_id) == get_ai_result(msg.series_id)




event('patient_created')
    > anonimize_dicom 
    > (give_task('quality_check'),
        get_birads_from_protocol,
        get_acr_from_procol)

event('quality_check', status='finished') 
    > (give_task('segment_calcifications'),
       make_seg_calcifications_from_ai
       )

(finished('segment_calcifications')
make_seg_calcifications_from_ai) 
    > compare_ai_with_doctor.if(result=False) 
    > give_task('check_calcification_differences')



--------------------------------
Запуск для обработки пайплана делается на клиентской стороне командой 
clarinet run workers --settings settings.toml

clarinet_port = 8001
database_name = "example1"
klara_storage_path = "//10.100.0.104/vol_storage/example1"
klara_url = "http://laris.niioncologii.local:80/example1"
instance_root_url = "/example1"
rabbitmq_max_consumers = 1
klara_path = 'e://RKT_trial/klara'
rabbitmq_exchange = "example1"
rabbitmq_url = "10.100.0.104:5645"
have_gpu = true

................................
Эта команда должна прочесть файл где лежит пайплайн, зарегистрировать соответствующих консьмеров в rabbitmq.